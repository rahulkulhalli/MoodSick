version: '3.8'
services:
  ml:
    platform: linux/arm64/v8
    build:
      context: ./ml
      dockerfile: Dockerfile
    image: ml_model
    tty: true
    ports:
      - 5000:80
    # volumes:
    #   - ./ml_training:/ml_model
    env_file:
      - ./ml/.env
    networks:
     moodSickNetwork-10.9.0.0:
        ipv4_address: 10.9.0.8

  # ml_training:
  #   platform: linux/arm64/v8
  #   build:
  #     context: ./ml_training
  #     dockerfile: Dockerfile
  #   image: ml_training
  #   tty: true
  #   ports:
  #     - 5000:80
  #   volumes:
  #     - ./ml_training:/ml_model
  #   env_file:
  #     - ./ml_training/.env
  #   networks:
  #     moodSickNetwork-10.9.0.0:
  #       ipv4_address: 10.9.0.8

  frontend:
    build:
      context: ./frontend/moodsick_ui
      dockerfile: Dockerfile
    tty: true
    ports:
      - 3000:3000
    networks:
      moodSickNetwork-10.9.0.0:
        ipv4_address: 10.9.0.5

  middleware:
    build:
      context: ./middleware
      dockerfile: Dockerfile
    tty: true
    env_file:
      - middleware/.env
    ports:
      - 8080:80
    volumes:
      - ./middleware/app:/code/app
    networks:
      moodSickNetwork-10.9.0.0:
        ipv4_address: 10.9.0.6


  mongodb:
    platform: linux/arm64/v8
    image: mongo:7.0.4-rc0
    ports:
      - "27018:27017"
    tty: true
    volumes:
      - ./mongo:/data/db
    networks:
      moodSickNetwork-10.9.0.0:
        ipv4_address: 10.9.0.9
    # environment:
      # MONGO_INITDB_ROOT_USENAME: mongo
      # MONGO_INITDB_ROOT_PASSRWORD: mongo
      # MONGO_INITDB_DATABASE: moodSickDB

networks:
  moodSickNetwork-10.9.0.0:
    driver: bridge
    ipam:
      config:
        - subnet: 10.9.0.0/24
